// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  conversations Conversation[]
  seenMessages  Message[]      @relation("Seen")

  accounts Account[]
  messages Message[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  User User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Conversation {
  id            String   @id @default(uuid())
  lastMessageAt DateTime
  name          String?
  lastMessage   String?
  isGroup       Boolean?

  User    User[]
  Message Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        String  @id @default(uuid())
  text      String  @db.Text
  isDeleted Boolean @default(false)
  isUpdated Boolean @default(false)
  file_url  String? @db.Text

  userId String
  user   User   @relation(fields: [userId], references: [id])

  seen User[] @relation("Seen")

  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([userId, conversationId])
}
